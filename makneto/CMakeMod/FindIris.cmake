# Try to find Iris XMPP library
# Imports:
# IRIS_TREE - path to iris tree in filesystem
# Exports:
# IRIS_INCLUDES
# IRIS_LIBRARIES

# Pihhanovy pokusy s IRIS
set(QT4_USE_QTXML)
set(QT4_USE_QTNETWORK)
FIND_PACKAGE(Qt4 COMPONENTS QtCore QtXML QtNetwork REQUIRED)

IF(NOT IRIS_TREE)
MESSAGE(STATUS "Iris tree not specified, trying iris")
GET_FILENAME_COMPONENT(BACKDIR "${PROJECT_SOURCE_DIR}/iris" ABSOLUTE)
MESSAGE(STATUS "Absolute path: ${BACKDIR}")
SET(IRIS_TREE ${BACKDIR})
MESSAGE(STATUS "IRIS_TREE is ${IRIS_TREE}")

ENDIF(NOT IRIS_TREE)

SET(IRIS_F_LIBRARIES)

FIND_LIBRARY(IRIS_F_LIBRARIES NAMES iris
    PATHS /usr /usr/local "${IRIS_TREE}"
    ENV IRIS_TREE 
    HINTS IRIS_TREE
    PATH_SUFFIXES lib lib64)
MESSAGE(STATUS "Iris library at: ${IRIS_F_LIBRARIES}")

FIND_LIBRARY(IRISNET_F_LIBRARIES NAMES irisnet
    PATHS /usr /usr/local ${IRIS_TREE}
    ENV IRIS_TREE 
    PATH_SUFFIXES lib lib64)
MESSAGE(STATUS "Irisnet library at: ${IRISNET_F_LIBRARIES}")

SET(IRIS_F_INCLUDE)
MARK_AS_ADVANCED(IRIS_F_INCLUDE)

FIND_PATH(IRIS_F_INCLUDE NAMES xmpp.h xmpp_jid.h
    PATHS ${IRIS_TREE}
    PATH_SUFFIXES include include/iris)
MESSAGE(STATUS "Iris include at: ${IRIS_F_INCLUDE}")
FIND_PATH(IRIS_F_INCLUDE NAMES iris/xmpp.h iris/xmpp_jid.h
    PATHS /usr /usr/local ${IRIS_TREE}
    ENV IRIS_TREE
    PATH_SUFFIXES include include/iris)
MESSAGE(STATUS "Iris include at: ${IRIS_F_INCLUDE}")

SET(IRIS_F_SRC)
MARK_AS_ADVANCED(IRIS_F_SRC)
FIND_PATH(IRIS_F_SRC src.pro
    PATHS /usr/src/iris /usr/local/src/iris ${IRIS_TREE}
    ENV IRIS_TREE
    PATH_SUFFIXES src)
MESSAGE(STATUS "Iris source at: ${IRIS_F_SRC}")



IF ( IRIS_F_INCLUDE AND IRIS_F_LIBRARIES AND IRISNET_F_LIBRARIES )
    set(Iris_FOUND TRUE)
    message(STATUS "Found Iris: ${IRIS_F_LIBRARIES}")
    set(IRIS_LIBRARIES "${IRIS_F_LIBRARIES};${IRISNET_F_LIBRARIES}")

    GET_FILENAME_COMPONENT(IRIS_ABSOLUTE_INCLUDE ${IRIS_F_INCLUDE} ABSOLUTE)
    set(IRIS_INCLUDES ${IRIS_ABSOLUTE_INCLUDE})
#    GET_FILENAME_COMPONENT(IRIS_INCLUDES ${IRIS_ABSOLUTE_INCLUDE} PATH)

    # Iris could not work without src as include...
    # Maybe someday fixed, until that make it working
#    GET_FILENAME_COMPONENT(IRIS_ABSOLUTE_SRC ${IRIS_F_SRC} ABSOLUTE)
#    GET_FILENAME_COMPONENT(IRIS_SOURCE ${IRIS_ABSOLUTE_SRC} PATH)
    GET_FILENAME_COMPONENT(IRIS_ABSOLUTE_SRC ${IRIS_F_SRC} ABSOLUTE)
    LIST(APPEND IRIS_INCLUDES ${IRIS_ABSOLUTE_SRC})
    message(STATUS "Found Iris includes: ${IRIS_INCLUDES}")
ELSE  ( IRIS_F_INCLUDE AND IRIS_F_LIBRARIES AND IRISNET_F_LIBRARIES )
    message(STATUS "Try to add -D IRIS_TREE=/path/to/iris/tree")
    IF (Iris_FIND_REQUIRED)
        message(SEND_ERROR "Could NOT find Iris")
    ELSE (Iris_FIND_REQUIRED)
        message(STATUS "Could NOT find Iris")
    ENDIF(Iris_FIND_REQUIRED)
ENDIF ( IRIS_F_INCLUDE AND IRIS_F_LIBRARIES AND IRISNET_F_LIBRARIES )

set(VERBOSE 1)
# overovani, zda IRIS funguje
# FIXME: neznamo jak overit, nasledujici proste a jednoduse nefunguje
# INCLUDE(CheckIncludeFileCXX)
# LIST(APPEND CMAKE_REQUIRED_INCLUDES ${QT_INCLUDES})
# LIST(APPEND CMAKE_REQUIRED_INCLUDES ${IRIS_INCLUDES})
# message(STATUS "Checking for iris include in paths ${CMAKE_REQUIRED_INCLUDES}")
# CHECK_INCLUDE_FILE_CXX(xmpp.h IRIS_XMPP_H)
# MARK_AS_ADVANCED(IRIS_XMPP_H)
# 
# IF (IRIS_XMPP_H)
# message(STATUS "Found xmpp.h")
# ELSE (IRIS_XMPP_H)
# message (SEND_ERROR "xmpp.h not found")
# ENDIF (IRIS_XMPP_H)

MARK_AS_ADVANCED( IRIS_INCLUDES IRIS_LIBRARIES )

