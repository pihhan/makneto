Index: Doxyfile
===================================================================
--- Doxyfile	(revision 68)
+++ Doxyfile	(working copy)
@@ -5,7 +5,7 @@
 #---------------------------------------------------------------------------
 PROJECT_NAME           = makneto
 PROJECT_NUMBER         = $VERSION$
-OUTPUT_DIRECTORY       = 
+OUTPUT_DIRECTORY       = doc
 CREATE_SUBDIRS         = NO
 OUTPUT_LANGUAGE        = English
 USE_WINDOWS_ENCODING   = NO
@@ -82,7 +82,7 @@
 #---------------------------------------------------------------------------
 # configuration options related to the input files
 #---------------------------------------------------------------------------
-INPUT                  = /home/kde-devel/src/makneto
+INPUT                  = src
 FILE_PATTERNS          = *.c \
                          *.cc \
                          *.cxx \
Index: cmake_install.cmake
===================================================================
--- cmake_install.cmake	(revision 68)
+++ cmake_install.cmake	(working copy)
@@ -1,8 +1,8 @@
-# Install script for directory: /home/kde-devel/src/makneto
+# Install script for directory: /home/pihhan/Projekty/makneto/trunk/makneto
 
 # Set the install prefix
 IF(NOT DEFINED CMAKE_INSTALL_PREFIX)
-  SET(CMAKE_INSTALL_PREFIX "/home/kde-devel/kde")
+  SET(CMAKE_INSTALL_PREFIX "/usr/local")
 ENDIF(NOT DEFINED CMAKE_INSTALL_PREFIX)
 STRING(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
 
@@ -12,7 +12,7 @@
     STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
            CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
   ELSE(BUILD_TYPE)
-    SET(CMAKE_INSTALL_CONFIG_NAME "debugfull")
+    SET(CMAKE_INSTALL_CONFIG_NAME "Debug")
   ENDIF(BUILD_TYPE)
   MESSAGE(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
 ENDIF(NOT CMAKE_INSTALL_CONFIG_NAME)
@@ -29,12 +29,12 @@
 
 # Install shared libraries without execute permission?
 IF(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
-  SET(CMAKE_INSTALL_SO_NO_EXE "0")
+  SET(CMAKE_INSTALL_SO_NO_EXE "1")
 ENDIF(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
 
 IF(NOT CMAKE_INSTALL_LOCAL_ONLY)
   # Include the install script for each subdirectory.
-  INCLUDE("/home/kde-devel/src/makneto/src/cmake_install.cmake")
+  INCLUDE("/home/pihhan/Projekty/makneto/trunk/makneto/src/cmake_install.cmake")
 
 ENDIF(NOT CMAKE_INSTALL_LOCAL_ONLY)
 IF(CMAKE_INSTALL_COMPONENT)
@@ -42,7 +42,7 @@
 ELSE(CMAKE_INSTALL_COMPONENT)
   SET(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
 ENDIF(CMAKE_INSTALL_COMPONENT)
-FILE(WRITE "/home/kde-devel/src/makneto/${CMAKE_INSTALL_MANIFEST}" "")
+FILE(WRITE "/home/pihhan/Projekty/makneto/trunk/makneto/${CMAKE_INSTALL_MANIFEST}" "")
 FOREACH(file ${CMAKE_INSTALL_MANIFEST_FILES})
-  FILE(APPEND "/home/kde-devel/src/makneto/${CMAKE_INSTALL_MANIFEST}" "${file}\n")
+  FILE(APPEND "/home/pihhan/Projekty/makneto/trunk/makneto/${CMAKE_INSTALL_MANIFEST}" "${file}\n")
 ENDFOREACH(file)
Index: src/connection.cpp
===================================================================
--- src/connection.cpp	(revision 69)
+++ src/connection.cpp	(working copy)
@@ -27,6 +27,7 @@
 
 Connection::Connection(Makneto *makneto): m_makneto(makneto)
 {
+
 	m_tlsHandler = 0;
 	m_conn = 0;
 	m_stream = 0;
@@ -38,6 +39,10 @@
 	m_client = new Client();
 	m_client->setClientName("Makneto");
 
+        // FIXME: make this better and more secure, also this does memleak
+        m_tls = new QCA::TLS();
+        //m_tlsHandler = new XMPP::QCATLSHandler(m_tls);
+
 	QStringList features;
 	features << "http://jabber.org/protocol/commands";
 	m_client->setFeatures(Features(features));
@@ -81,13 +86,15 @@
 
 	// my jabber id from settings
 	m_jid = Jid(Settings::jabberID());
-	m_jid.setResource("Makneto");
+        if (m_jid.resource().isEmpty()) {
+	        m_jid = m_jid.withResource("Makneto");
+        }
 
 	m_conn = new AdvancedConnector(this);
 
 	// TODO:ssl connection
 	m_conn->setOptSSL(false);
-	m_conn->setOptProbe(true);
+	m_conn->setOptProbe(false);
 	
 	if (!Settings::jabberHost().isEmpty())
 	{
@@ -100,7 +107,8 @@
 	if (Settings::allowPlain())
 		m_stream->setAllowPlain(ClientStream::AllowPlain);
 
-	m_stream->setRequireMutualAuth(true);
+        // this makes problems with integrated Simple SASL library.
+	m_stream->setRequireMutualAuth(false);
 
 	connect(m_stream, SIGNAL(needAuthParams(bool, bool, bool)), SLOT(needAuthParams(bool, bool, bool)));
 	connect(m_stream, SIGNAL(connected()), SLOT(connected()));
@@ -320,7 +328,7 @@
 {
 	qDebug() << "Connection::authenticated()";
 
-	m_client->start(m_jid.host(), m_jid.user(), "test", "Makneto");
+	m_client->start(m_jid.domain(), m_jid.node(), "test", "Makneto");
 
 	if (!m_stream->old())
 	{
@@ -375,10 +383,13 @@
 {
 	if(m_stream)
 		return m_stream->isAuthenticated();
+        else
+                return false;
 }
 
 void Connection::client_rosterRequestFinished(bool success, int, const QString &)
 {
+        Q_UNUSED(success)
 	qDebug() << "Connection::client_rosterRequestFinished()";
 
 	m_rosterFinished = true;
Index: src/cmake_uninstall.cmake
===================================================================
--- src/cmake_uninstall.cmake	(revision 69)
+++ src/cmake_uninstall.cmake	(working copy)
@@ -1,8 +1,8 @@
-IF(NOT EXISTS "/home/kde-devel/src/makneto/src/install_manifest.txt")
-  MESSAGE(FATAL_ERROR "Cannot find install manifest: \"/home/kde-devel/src/makneto/src/install_manifest.txt\"")
-ENDIF(NOT EXISTS "/home/kde-devel/src/makneto/src/install_manifest.txt")
+IF(NOT EXISTS "/home/pihhan/Projekty/makneto/trunk/makneto/src/install_manifest.txt")
+  MESSAGE(FATAL_ERROR "Cannot find install manifest: \"/home/pihhan/Projekty/makneto/trunk/makneto/src/install_manifest.txt\"")
+ENDIF(NOT EXISTS "/home/pihhan/Projekty/makneto/trunk/makneto/src/install_manifest.txt")
 
-FILE(READ "/home/kde-devel/src/makneto/src/install_manifest.txt" files)
+FILE(READ "/home/pihhan/Projekty/makneto/trunk/makneto/src/install_manifest.txt" files)
 STRING(REGEX REPLACE "\n" ";" files "${files}")
 FOREACH(file ${files})
   MESSAGE(STATUS "Uninstalling \"${file}\"")
Index: src/sessionview.h
===================================================================
--- src/sessionview.h	(revision 69)
+++ src/sessionview.h	(working copy)
@@ -104,9 +104,9 @@
 	
 	QString m_session;
 	QString m_jid;
+	ChatState m_lastChatState;
 	int m_id;
 
-	ChatState m_lastChatState;
 
 	// TODO: TEST ONLY!
 	QBuffer *m_testbuffer;
Index: src/addcontactdialog.cpp
===================================================================
--- src/addcontactdialog.cpp	(revision 69)
+++ src/addcontactdialog.cpp	(working copy)
@@ -44,13 +44,13 @@
 		return;
 	}
 
-	if (!XMPP::Jid(ui.jabberID->text().stripWhiteSpace()).isValid())
+	if (!XMPP::Jid(ui.jabberID->text().simplified()).isValid())
 	{
 		KMessageBox::error(this, i18n("Incorrect Jabber ID! Please try again to set correct Jabber ID."), i18n("Error"));
 		return;
 	}
 
-	addUser(XMPP::Jid(ui.jabberID->text().stripWhiteSpace()), "", ui.requestAuth->isChecked());
+	addUser(XMPP::Jid(ui.jabberID->text().simplified()), "", ui.requestAuth->isChecked());
 
 	accept();
 }
Index: src/ftstream.cpp
===================================================================
--- src/ftstream.cpp	(revision 69)
+++ src/ftstream.cpp	(working copy)
@@ -69,7 +69,7 @@
 
 void FTStream::needData()
 {
-	qDebug("FTStream::needData(): %x", m_buffer->size());
+	qDebug("FTStream::needData(): %llx", m_buffer->size());
 
 	// start pushing data
 	m_timer->start();
Index: src/connectionview.cpp
===================================================================
--- src/connectionview.cpp	(revision 69)
+++ src/connectionview.cpp	(working copy)
@@ -11,6 +11,8 @@
 #include "makneto.h"
 #include "settings.h"
 
+#include <kicon.h>
+
 #include <QtGui/QVBoxLayout>
 #include <QtGui/QPushButton>
 #include <QtGui/QLabel>
Index: src/CMakeLists.txt
===================================================================
--- src/CMakeLists.txt	(revision 69)
+++ src/CMakeLists.txt	(working copy)
@@ -2,33 +2,46 @@
 
 SET(CMAKE_BUILD_TYPE Debug)
 
+message("CMAKE CXX flags: "${CMAKE_CXX_FLAGS})
+message("CMAKE C flags: "${CMAKE_C_FLAGS})
 find_package(KDE4 REQUIRED)
+message("CMAKE CXX flags: "${CMAKE_CXX_FLAGS})
+message("CMAKE C flags: "${CMAKE_C_FLAGS})
 find_package(QCA2 REQUIRED)
-find_package(Qt4 REQUIRED)
+message("CMAKE CXX flags: "${CMAKE_CXX_FLAGS})
+message("CMAKE C flags: "${CMAKE_C_FLAGS})
+# find_package(Qt4 REQUIRED)
 
-set(QT_USE_QT3SUPPORT TRUE)
+#set(QT_USE_QT3SUPPORT TRUE)
 include(${QT_USE_FILE})
+message("CMAKE CXX flags: "${CMAKE_CXX_FLAGS})
+message("CMAKE C flags: "${CMAKE_C_FLAGS})
 
 include (KDE4Defaults)
-include_directories( ${KDE4_INCLUDES} ${KDE4_PHONON_INCLUDES}  ${KDE4_KDECORE_INCLUDES} ${QT_INCLUDES} ${QCA2_INCLUDE_DIR} iris/include iris/libidn iris/xmpp-core iris/xmpp-im 
-iris/jabber cutestuff/util cutestuff/network cutestuff/legacy )
+message("CMAKE CXX flags: "${CMAKE_CXX_FLAGS})
+message("CMAKE C flags: "${CMAKE_C_FLAGS})
 
+set(IRIS_TREE "/home/pihhan/Projekty/xmpp/psi/iris")
+set(IRIS_LIB_PATH ${IRIS_TREE}/lib)
+set(IRIS_LIBS 
+    iris
+    irisnet
+    )
+set(IRIS_INCLUDE ${IRIS_TREE}/include/iris ${IRIS_TREE}/src)
+
+include_directories( ${KDE4_INCLUDES} ${KDE4_PHONON_INCLUDES}  ${KDE4_KDECORE_INCLUDES} ${QT_INCLUDES} ${QCA2_INCLUDE_DIR} ${IRIS_INCLUDE} 
+cutestuff/util cutestuff/network cutestuff/legacy )
+
+
 link_directories( 
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/libidn  
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/xmpp-core
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/xmpp-im
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/jabber
     ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/cutestuff/network  
     ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/cutestuff/util
     ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/cutestuff/legacy
+    ${IRIS_LIB_PATH}
 )
 
 link_libraries( 
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/libidn  
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/xmpp-core
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/xmpp-im
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/iris/jabber
-    ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/makneto.dir/cutestuff/util
+    ${IRIS_LIBS}
 )
 
 
@@ -66,83 +79,11 @@
 	contactlist/contactlistview.cpp
 	contactlist/status.h
 
-#libidn
-	iris/libidn/profiles.c
-	iris/libidn/rfc3454.c
-	iris/libidn/nfkc.c
-	iris/libidn/stringprep.c
-#iris
-	iris/xmpp-core/connector.cpp
-	iris/xmpp-core/tlshandler.cpp
-	iris/xmpp-core/jid.cpp
-	iris/xmpp-core/securestream.cpp
-	iris/xmpp-core/parser.cpp
-	iris/xmpp-core/xmlprotocol.cpp
-	iris/xmpp-core/protocol.cpp
-	iris/xmpp-core/compress.cpp
-	iris/xmpp-core/compressionhandler.cpp
-	iris/xmpp-core/stream.cpp
-	iris/xmpp-core/simplesasl.cpp
-	iris/xmpp-core/xmpp_stanza.cpp
-	iris/xmpp-im/types.cpp
-	iris/xmpp-im/client.cpp
-	iris/xmpp-im/xmpp_features.cpp
-	iris/xmpp-im/xmpp_discoitem.cpp
-	iris/xmpp-im/xmpp_discoinfotask.cpp
-	iris/xmpp-im/xmpp_xdata.cpp
-	iris/xmpp-im/xmpp_task.cpp
-	iris/xmpp-im/xmpp_tasks.cpp
-	iris/xmpp-im/xmpp_xmlcommon.cpp
-	iris/xmpp-im/xmpp_vcard.cpp
-	iris/jabber/s5b.cpp
-	iris/jabber/xmpp_ibb.cpp
-	iris/jabber/filetransfer.cpp
-	
-#cutestuff
-	cutestuff/util/bytestream.cpp
-	
-        cutestuff/network/bsocket.cpp
-        cutestuff/network/httpconnect.cpp
-        cutestuff/network/httppoll.cpp
-        cutestuff/network/socks.cpp
-        
-	cutestuff/legacy/ndns.cpp
-        cutestuff/legacy/safedelete.cpp
-        cutestuff/legacy/servsock.cpp
-        cutestuff/legacy/srvresolver.cpp
 
  )
 
 kde4_moc_headers(makneto
-        cutestuff/legacy/ndns.h
-        cutestuff/legacy/safedelete.h
-        cutestuff/legacy/servsock.h
-        cutestuff/legacy/srvresolver.h
 
-        cutestuff/network/bsocket.h
-        cutestuff/network/httpconnect.h
-        cutestuff/network/socks.h
-        cutestuff/network/httppoll.h
-
-        cutestuff/util/bytestream.h
-
-        iris/include/xmpp.h
-        iris/include/xmpp_task.h
-        iris/include/xmpp_client.h
-        iris/include/xmpp_clientstream.h
-        iris/include/xmpp_liverosteritem.h
-        iris/include/xmpp_stream.h
-
-        iris/jabber/filetransfer.h
-        iris/jabber/s5b.h
-        iris/jabber/xmpp_ibb.h
-
-        iris/xmpp-core/compress.h
-        iris/xmpp-core/compressionhandler.h
-        iris/xmpp-core/securestream.h
-
-        iris/xmpp-im/xmpp_tasks.h
-        iris/xmpp-im/xmpp_discoinfotask.h
 )
 
 kde4_add_ui_files(makneto_SRCS maknetoview_base.ui prefs_base.ui add_contact.ui)
@@ -150,9 +91,9 @@
 
 kde4_add_executable(makneto ${makneto_SRCS})
 
-SET_TARGET_PROPERTIES(makneto PROPERTIES COMPILE_FLAGS "-g -O2")
+SET_TARGET_PROPERTIES(makneto PROPERTIES COMPILE_FLAGS "-g")
 
-target_link_libraries(makneto ${KDE4_KDEUI_LIBS} ${QT_LIBRARIES} ${QCA2_LIBRARIES} ${KDE4_KHTML_LIBS} ${KDE4_PHONON_LIBS})
+target_link_libraries(makneto ${KDE4_KDEUI_LIBS} ${QT_LIBRARIES} ${QCA2_LIBRARIES} ${KDE4_KHTML_LIBS} ${KDE4_PHONON_LIBS} ${IRIS_LIBS})
 
 install(TARGETS makneto DESTINATION ${BIN_INSTALL_DIR} )
 
Index: src/cmake_install.cmake
===================================================================
--- src/cmake_install.cmake	(revision 69)
+++ src/cmake_install.cmake	(working copy)
@@ -1,4 +1,4 @@
-# Install script for directory: /home/radek/app/trunk/makneto/src
+# Install script for directory: /home/pihhan/Projekty/makneto/trunk/makneto/src
 
 # Set the install prefix
 IF(NOT DEFINED CMAKE_INSTALL_PREFIX)
@@ -7,15 +7,15 @@
 STRING(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
 
 # Set the install configuration name.
-IF(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+IF(NOT CMAKE_INSTALL_CONFIG_NAME)
   IF(BUILD_TYPE)
     STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
            CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
   ELSE(BUILD_TYPE)
-    SET(CMAKE_INSTALL_CONFIG_NAME "Debugfull")
+    SET(CMAKE_INSTALL_CONFIG_NAME "Debug")
   ENDIF(BUILD_TYPE)
   MESSAGE(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
-ENDIF(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+ENDIF(NOT CMAKE_INSTALL_CONFIG_NAME)
 
 # Set the component getting installed.
 IF(NOT CMAKE_INSTALL_COMPONENT)
@@ -29,35 +29,24 @@
 
 # Install shared libraries without execute permission?
 IF(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
-  SET(CMAKE_INSTALL_SO_NO_EXE "0")
+  SET(CMAKE_INSTALL_SO_NO_EXE "1")
 ENDIF(NOT DEFINED CMAKE_INSTALL_SO_NO_EXE)
 
-IF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-  IF("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Dd][Ee][Bb][Uu][Gg][Ff][Uu][Ll][Ll])$")
-    FILE(INSTALL DESTINATION "/usr/local/bin" TYPE EXECUTABLE FILES "/home/radek/app/trunk/makneto/src/makneto")
-    IF(EXISTS "$ENV{DESTDIR}/usr/local/bin/makneto")
-      IF(CMAKE_INSTALL_DO_STRIP)
-        EXECUTE_PROCESS(COMMAND "/usr/bin/strip" "$ENV{DESTDIR}/usr/local/bin/makneto")
-      ENDIF(CMAKE_INSTALL_DO_STRIP)
-    ENDIF(EXISTS "$ENV{DESTDIR}/usr/local/bin/makneto")
-  ENDIF("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Dd][Ee][Bb][Uu][Gg][Ff][Uu][Ll][Ll])$")
-ENDIF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-
-IF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-  FILE(INSTALL DESTINATION "/usr/local/share/applications/kde4" TYPE FILE FILES "/home/radek/app/trunk/makneto/src/makneto.desktop")
-ENDIF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-
-IF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-  FILE(INSTALL DESTINATION "/usr/local/share/config.kcfg" TYPE FILE FILES "/home/radek/app/trunk/makneto/src/makneto.kcfg")
-ENDIF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-
-IF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-  FILE(INSTALL DESTINATION "/usr/local/share/apps/makneto" TYPE FILE FILES "/home/radek/app/trunk/makneto/src/maknetoui.rc")
-ENDIF(NOT CMAKE_INSTALL_COMPONENT OR "${CMAKE_INSTALL_COMPONENT}" MATCHES "^(Unspecified)$")
-
+FILE(INSTALL DESTINATION "/usr/local/bin" TYPE EXECUTABLE FILES "/home/pihhan/Projekty/makneto/trunk/makneto/src/makneto")
+FILE(INSTALL DESTINATION "/usr/local/share/applications/kde4" TYPE FILE FILES "/home/pihhan/Projekty/makneto/trunk/makneto/src/makneto.desktop")
+FILE(INSTALL DESTINATION "/usr/local/share/config.kcfg" TYPE FILE FILES "/home/pihhan/Projekty/makneto/trunk/makneto/src/makneto.kcfg")
+FILE(INSTALL DESTINATION "/usr/local/share/apps/makneto" TYPE FILE FILES "/home/pihhan/Projekty/makneto/trunk/makneto/src/maknetoui.rc")
 IF(NOT CMAKE_INSTALL_LOCAL_ONLY)
   # Include the install script for each subdirectory.
-  INCLUDE("/home/radek/app/trunk/makneto/src/icons/cmake_install.cmake")
+  INCLUDE("/home/pihhan/Projekty/makneto/trunk/makneto/src/icons/cmake_install.cmake")
 
 ENDIF(NOT CMAKE_INSTALL_LOCAL_ONLY)
-
+IF(CMAKE_INSTALL_COMPONENT)
+  SET(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
+ELSE(CMAKE_INSTALL_COMPONENT)
+  SET(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
+ENDIF(CMAKE_INSTALL_COMPONENT)
+FILE(WRITE "/home/pihhan/Projekty/makneto/trunk/makneto/src/${CMAKE_INSTALL_MANIFEST}" "")
+FOREACH(file ${CMAKE_INSTALL_MANIFEST_FILES})
+  FILE(APPEND "/home/pihhan/Projekty/makneto/trunk/makneto/src/${CMAKE_INSTALL_MANIFEST}" "${file}\n")
+ENDFOREACH(file)
Index: src/maknetocontactlist.cpp
===================================================================
--- src/maknetocontactlist.cpp	(revision 69)
+++ src/maknetocontactlist.cpp	(working copy)
@@ -19,6 +19,8 @@
 
 #include <iostream>
 
+#include <klocalizedstring.h>
+
 MaknetoContactList::MaknetoContactList(Makneto *makneto) : ContactList(), m_makneto(makneto) 
 { 
 	m_contactActions = new QActionGroup(0);
Index: src/roasterview.cpp
===================================================================
--- src/roasterview.cpp	(revision 69)
+++ src/roasterview.cpp	(working copy)
@@ -18,6 +18,7 @@
 
 #include <klineedit.h>
 #include <kdialog.h>
+#include <klocalizedstring.h>
 
 
 RoasterView::RoasterView(QWidget *, Makneto *makneto): m_makneto(makneto)
@@ -31,7 +32,7 @@
 	connect(m_addcontact, SIGNAL(clicked(bool)), SLOT(addContactClicked(bool)));
 
 	m_offline = new QPushButton(KIconLoader::global()->loadIcon("edit-find-user", KIconLoader::Toolbar, KIconLoader:: SizeSmall), i18n("&Show all"), this);
-	m_offline->setToggleButton(true);
+	m_offline->setCheckable(true);
 	m_offline->setChecked(true);
 	m_buttonslayout->addWidget(m_offline);
 	connect(m_offline, SIGNAL(clicked(bool)), SLOT(offlineClicked(bool)));
Index: src/wbwidget.cpp
===================================================================
--- src/wbwidget.cpp	(revision 69)
+++ src/wbwidget.cpp	(working copy)
@@ -73,7 +73,7 @@
 		if (file.open(QIODevice::ReadOnly)) {
 			// TODO: Should we perhaps scale large images?
 			QByteArray data = file.readAll();
-			QImage image(data);
+			QImage image = QImage::fromData(data);
 			if(!image.isNull()) {
 				// Create the element
 // 				QDomDocument d = QDomDocument();
Index: src/sessionview.cpp
===================================================================
--- src/sessionview.cpp	(revision 69)
+++ src/sessionview.cpp	(working copy)
@@ -66,7 +66,7 @@
 	connect(m_sendmsg, SIGNAL(clicked()), this, SLOT(sendClicked()));
 
 	// output chat text edit props
-	m_chatoutput->setTextFormat(Qt::RichText);
+	//m_chatoutput->setTextFormat(Qt::RichText); // FIXME: port to correct behaviour on Qt4
 	m_chatoutput->setReadOnly(true);
 
 	m_chatSplitter->addWidget(m_chatoutput);
@@ -175,12 +175,13 @@
 	message.setFrom(Settings::jabberID()+"/Makneto");
 	message.setType("chat");
 	message.setChatState(StateActive);
-	message.setBody(m_chatinput->text());
+        // TODO: support xhtml using correct xep, for now, only plaintext
+	message.setBody(m_chatinput->toPlainText());
 
 	emit sendMessage(message);
 
 	// format for chat window
-	text = "<b>Me</b>: "+m_chatinput->text();
+	text = "<b>Me</b>: "+m_chatinput->toPlainText();
 
 	m_chatinput->setText("");
 
Index: src/iris/include/xmpp_clientstream.h
===================================================================
--- src/iris/include/xmpp_clientstream.h	(revision 69)
+++ src/iris/include/xmpp_clientstream.h	(working copy)
@@ -37,53 +37,55 @@
 	class TLSHandler;
 	class Connector;
 
+
+        /*! \brief Network stream abstraction for clients. */
 	class ClientStream : public Stream
 	{
 		Q_OBJECT
 	public:
 		enum Error {
-			ErrConnection = ErrCustom,  // Connection error, ask Connector-subclass what's up
-			ErrNeg,                     // Negotiation error, see condition
-			ErrTLS,                     // TLS error, see condition
-			ErrAuth,                    // Auth error, see condition
-			ErrSecurityLayer,           // broken SASL security layer
-			ErrBind                     // Resource binding error
+			ErrConnection = ErrCustom,  ///!< Connection error, ask Connector-subclass what's up
+			ErrNeg,                     ///!< Negotiation error, see condition
+			ErrTLS,                     ///!< TLS error, see condition
+			ErrAuth,                    ///!< Auth error, see condition
+			ErrSecurityLayer,           ///!< broken SASL security layer
+			ErrBind                     ///!< Resource binding error
 		};
 		enum Warning {
-			WarnOldVersion,             // server uses older XMPP/Jabber "0.9" protocol
-			WarnNoTLS                   // there is no chance for TLS at this point
+			WarnOldVersion,             ///!< server uses older XMPP/Jabber "0.9" protocol
+			WarnNoTLS                   ///!< there is no chance for TLS at this point
 		};
 		enum NegCond {
-			HostGone,                   // host no longer hosted
-			HostUnknown,                // unknown host
-			RemoteConnectionFailed,     // unable to connect to a required remote resource
-			SeeOtherHost,               // a 'redirect', see errorText() for other host
-			UnsupportedVersion          // unsupported XMPP version
+			HostGone,                   ///!< host no longer hosted
+			HostUnknown,                ///!< unknown host
+			RemoteConnectionFailed,     ///!< unable to connect to a required remote resource
+			SeeOtherHost,               ///!< a 'redirect', see errorText() for other host
+			UnsupportedVersion          ///!< unsupported XMPP version
 		};
 		enum TLSCond {
-			TLSStart,                   // server rejected STARTTLS
-			TLSFail                     // TLS failed, ask TLSHandler-subclass what's up
+			TLSStart,                   ///!< server rejected STARTTLS
+			TLSFail                     ///!< TLS failed, ask TLSHandler-subclass what's up
 		};
 		enum SecurityLayer {
 			LayerTLS,
 			LayerSASL
 		};
 		enum AuthCond {
-			GenericAuthError,           // all-purpose "can't login" error
-			NoMech,                     // No appropriate auth mech available
-			BadProto,                   // Bad SASL auth protocol
-			BadServ,                    // Server failed mutual auth
-			EncryptionRequired,         // can't use mech without TLS
-			InvalidAuthzid,             // bad input JID
-			InvalidMech,                // bad mechanism
-			InvalidRealm,               // bad realm
-			MechTooWeak,                // can't use mech with this authzid
-			NotAuthorized,              // bad user, bad password, bad creditials
-			TemporaryAuthFailure        // please try again later!
+			GenericAuthError,           ///!< all-purpose "can't login" error
+			NoMech,                     ///!< No appropriate auth mech available
+			BadProto,                   ///!< Bad SASL auth protocol
+			BadServ,                    ///!< Server failed mutual auth
+			EncryptionRequired,         ///!< can't use mech without TLS
+			InvalidAuthzid,             ///!< bad input JID
+			InvalidMech,                ///!< bad mechanism
+			InvalidRealm,               ///!< bad realm
+			MechTooWeak,                ///!< can't use mech with this authzid
+			NotAuthorized,              ///!< bad user, bad password, bad creditials
+			TemporaryAuthFailure        ///!< please try again later!
 		};
 		enum BindCond {
-			BindNotAllowed,             // not allowed to bind a resource
-			BindConflict                // resource in-use
+			BindNotAllowed,             ///!< not allowed to bind a resource
+			BindConflict                ///!< resource in-use
 		};
 		enum AllowPlainType {
 			NoAllowPlain,
@@ -96,6 +98,11 @@
 		~ClientStream();
 
 		Jid jid() const;
+
+                /*! \brief Start connection to server.
+                 * \param jid Jid of server, only domain part is used.
+                 * \param auth Enable authentication, enabled by default.
+                 * */
 		void connectToServer(const Jid &jid, bool auth=true);
 		void accept(); // server
 		bool isActive() const;
Index: src/iris/include/xmpp_stream.h
===================================================================
--- src/iris/include/xmpp_stream.h	(revision 69)
+++ src/iris/include/xmpp_stream.h	(working copy)
@@ -31,6 +31,8 @@
 
 namespace XMPP 
 {
+
+        /*! \brief Generic abstraction for any network connection. */
 	class Stream : public QObject
 	{
 		Q_OBJECT
@@ -64,9 +66,16 @@
 		virtual QString errorText() const=0;
 		virtual QDomElement errorAppSpec() const=0;
 
+                /*! \brief Helper to create stanza using parameters. 
+                 * \param k Kind of stanza, FIXME: describe types.
+                 * \param to Destination of stanza, to parameter as Jid type. 
+                 * \param type FIXME: fill something. 
+                 * \param id Id of Iq packets. Make sure you have good enough random generator.*/
 		Stanza createStanza(Stanza::Kind k, const Jid &to="", const QString &type="", const QString &id="");
+                /*! \brief Convert XML tree to Stanza. */
 		Stanza createStanza(const QDomElement &e);
 
+                /*! \brief Convert XML tree to string. */
 		static QString xmlToString(const QDomElement &e, bool clip=false);
 
 	signals:
Index: src/iris/include/xmpp_client.h
===================================================================
--- src/iris/include/xmpp_client.h	(revision 69)
+++ src/iris/include/xmpp_client.h	(working copy)
@@ -50,6 +50,9 @@
 
 namespace XMPP
 {
+        /*!
+         * \brief Main class of XMPP client.
+         * */
 	class Client : public QObject
 	{
 		Q_OBJECT
@@ -58,6 +61,8 @@
 		Client(QObject *parent=0);
 		~Client();
 
+                /*! \brief Ask whether connection is active. 
+                 * \return True, if you are client is active - connecting or connected.*/
 		bool isActive() const;
 		void connectToServer(ClientStream *s, const Jid &j, bool auth=true);
 		void start(const QString &host, const QString &user, const QString &pass, const QString &resource);
@@ -77,6 +82,7 @@
 		QString resource() const;
 		Jid jid() const;
 
+                /*! \brief Request all items of roster. */
 		void rosterRequest();
 		void sendMessage(const Message &);
 		void sendSubscription(const Jid &, const QString &, const QString& nick = QString());
@@ -104,6 +110,7 @@
 		void setCapsVersion(const QString &);
 
 		void setIdentity(DiscoItem::Identity);
+                /*! \brief Get identity of client, which will be included in Disco#info query to us. */
 		DiscoItem::Identity identity();
 
 		void setFeatures(const Features& f);
@@ -115,6 +122,7 @@
 		QStringList extensions() const;
 		
 		S5BManager *s5bManager() const;
+                /*! \brief Get In-band connections Manager */
 		IBBManager *ibbManager() const;
 		JidLinkManager *jidLinkManager() const;
 
Index: src/iris/include/xmpp.h
===================================================================
--- src/iris/include/xmpp.h	(revision 69)
+++ src/iris/include/xmpp.h	(working copy)
@@ -69,18 +69,28 @@
 
 	void setDebug(Debug *);
 
+        /*! \brief Class for connection management and setup. 
+         * This class has only basic features, see AdvancedConnector if you 
+         * need proxy or HTTP polling support. */
 	class Connector : public QObject
 	{
 		Q_OBJECT
 	public:
 		Connector(QObject *parent=0);
 		virtual ~Connector();
-
+                
+                /*! \brief Start connection to server.
+                 * \param server DNS name of server.
+                 * */
 		virtual void connectToServer(const QString &server)=0;
 		virtual ByteStream *stream() const=0;
 		virtual void done()=0;
 
+                /*! \brief Get configuration of SSL.
+                 * \return True if we will connect with secure stream. */
 		bool useSSL() const;
+                /*! \brief Do we know address?.
+                 * \return True if IP address is known already. */
 		bool havePeerAddress() const;
 		QHostAddress peerAddress() const;
 		quint16 peerPort() const;
@@ -90,8 +100,15 @@
 		void error();
 
 	protected:
+                /*! \brief Configure usage of secure stream. 
+                 * Force SSL encryption right after connection, legacy SSL.
+                 * \param b True if we should try SSL on connection. */
 		void setUseSSL(bool b);
+                /*! \brief Clear configured server IP address. */
 		void setPeerAddressNone();
+                /*! \brief Configure server IP address. 
+                 * \param addr IP addres of server. 
+                 * \param port Target port of server. */
 		void setPeerAddress(const QHostAddress &addr, quint16 port);
 
 	private:
@@ -100,7 +117,10 @@
 		QHostAddress addr;
 		quint16 port;
 	};
-
+        
+        /*! \brief Advanced connector with special connections also.
+         *
+         * It does support connection using HTTP proxy and SOCKS proxy. */
 	class AdvancedConnector : public Connector
 	{
 		Q_OBJECT
@@ -124,10 +144,32 @@
 			QString pass() const;
 			int pollInterval() const;
 
+                        /*! \brief Set connection type as HTTP using CONNECT request. 
+                         *
+                         * Connect is faster and more reliable than polling, 
+                         * but have to be supported and enabled by Proxy servers,
+                         * often is disabled by default. After HTTP request does work like normal TCP connection.
+                         * \param host DNS name of HTTP server. 
+                         * \param port Port of HTTP server. */
 			void setHttpConnect(const QString &host, quint16 port);
+                        /*! \brief Set connection type to HTTP polling.
+                         *
+                         * Polling is slower, less efficient and does use more
+                         * traffic than connect method. But it does look like
+                         * normal HTTP traffic and should pass any proxy.
+                         * \param host DNS name of HTTP server.
+                         * \param port Port of HTTP server.
+                         * \param url Url to polling page. FIXME: is relative to server root, or full URL with http:// ? */
 			void setHttpPoll(const QString &host, quint16 port, const QString &url);
 			void setSocks(const QString &host, quint16 port);
+                        /*! \brief Set credentials for authentication. 
+                         * \param user Username. 
+                         * \param pass Password. */
 			void setUserPass(const QString &user, const QString &pass);
+                        /*! \brief Set polling interval.
+                         * It does affect time of reaction. Lesser the time is,
+                         *  faster and more instant messages are, but also uses
+                         *  more network resources and data. */
 			void setPollInterval(int secs);
 
 		private:
@@ -138,13 +180,25 @@
 			int v_poll;
 		};
 
+                /*! \brief Set proxy server.
+                 * Does work only if connection is idle. */
 		void setProxy(const Proxy &proxy);
+                /*! \brief Set manual IP hostname and port.
+                 * Does work only if connection is idle. */
 		void setOptHostPort(const QString &host, quint16 port);
+                /*! \brief Configure SSL probing. 
+                 * Does work only if connection is idle. Check this, if legacy
+                 * SSL connection should be tried first. If that would not work,
+                 * try plain TCP connection instead. */
 		void setOptProbe(bool);
+                /*! \brief Set SSL usage.
+                 * Does work only if connection is idle. */
 		void setOptSSL(bool);
 
 		void changePollInterval(int secs);
 
+                /*! \brief Start connection to server.
+                 * \param server DNS name of server. */
 		void connectToServer(const QString &server);
 		ByteStream *stream() const;
 		void done();
@@ -158,9 +212,14 @@
 		void httpSyncFinished();
 
 	private slots:
+                /*! \brief DNS resolution is complete, we have target address. */
 		void dns_done();
+                /*! \brief Triggers when SRV reply arrives.
+                 * Set hostname and port.
+                 * */
 		void srv_done();
 		void bs_connected();
+                /*! \brief Handle errors, or try next SRV hostname if we have any */
 		void bs_error(int);
 		void http_syncStarted();
 		void http_syncFinished();
@@ -171,10 +230,16 @@
 
 		void cleanup();
 		void do_resolve();
+                /*! \brief Initiate actual connection. 
+                 * Connect to XMPP or Proxy server. On success, signal to 
+                 * bs_connected is emited, on error to bs_error.*/
 		void do_connect();
+                /*! \brief Try next server from SRV reply list. */
 		void tryNextSrv();
 	};
 
+
+        /*! \brief Virtual abstraction of TLS handler. */
 	class TLSHandler : public QObject
 	{
 		Q_OBJECT
@@ -195,6 +260,7 @@
 		void readyReadOutgoing(const QByteArray &a, int plainBytes);
 	};
 
+        /*! \brief Useable and implemented TLS handler. */
 	class QCATLSHandler : public TLSHandler
 	{
 		Q_OBJECT
@@ -204,7 +270,9 @@
 
 		QCA::TLS *tls() const;
 		int tlsError() const;
-
+                
+                /*! \brief Enable certificate hostname matching.
+                 * \param enable true to enable checking */
 		void setXMPPCertCheck(bool enable);
 		bool XMPPCertCheck();
 		bool certMatchesHostname();
Index: src/iris/xmpp-core/protocol.cpp
===================================================================
--- src/iris/xmpp-core/protocol.cpp	(revision 69)
+++ src/iris/xmpp-core/protocol.cpp	(working copy)
@@ -1315,6 +1315,7 @@
 				QDomNodeList l = m.elementsByTagNameNS(NS_SASL, "mechanism");
 				for(int n = 0; n < l.count(); ++n)
 					f.sasl_mechs += l.item(n).toElement().text();
+                                        qDebug("SASL Mech: %s\n", (f.sasl_mechs));
 			}
 			QDomElement c = e.elementsByTagNameNS(NS_COMPRESS_FEATURE, "compression").item(0).toElement();
 			if(!c.isNull()) {
Index: src/iris/xmpp-core/simplesasl.cpp
===================================================================
--- src/iris/xmpp-core/simplesasl.cpp	(revision 69)
+++ src/iris/xmpp-core/simplesasl.cpp	(working copy)
@@ -263,6 +263,7 @@
 
 		mechanism_ = QString();
 		foreach(QString mech, mechlist) {
+                        qDebug() << "SimpleSasl Mechanism: " << mech << endl;
 			if (mech == "DIGEST-MD5") {
 				mechanism_ = "DIGEST-MD5";
 				break;
Index: src/mediaplayer.cpp
===================================================================
--- src/mediaplayer.cpp	(revision 69)
+++ src/mediaplayer.cpp	(working copy)
@@ -96,8 +96,10 @@
 
 	QList<Phonon::AudioOutputDevice> caps = Phonon::BackendCapabilities::availableAudioOutputDevices();
 
-	for(int i = 0; i<caps.size(); i++)
-		qDebug(caps[i].name());
+	for(int i = 0; i<caps.size(); i++) {
+                QString name = caps[i].name(); 
+		qDebug() << name; // FIXME: discover why it does not accept caps[i].name() directly
+        }
 
 	resize(300, 350);
 
@@ -132,7 +134,7 @@
 		actionSeekBackward->setEnabled(false);
 	}
 
-	qDebug(m_media->metaData("ARTIST").first());
+	qDebug() << (m_media->metaData("ARTIST").first());
 }
 
 void MediaPlayer::createButtons()
Index: cmake_uninstall.cmake
===================================================================
--- cmake_uninstall.cmake	(revision 68)
+++ cmake_uninstall.cmake	(working copy)
@@ -1,8 +1,8 @@
-IF(NOT EXISTS "/home/kde-devel/src/makneto/install_manifest.txt")
-  MESSAGE(FATAL_ERROR "Cannot find install manifest: \"/home/kde-devel/src/makneto/install_manifest.txt\"")
-ENDIF(NOT EXISTS "/home/kde-devel/src/makneto/install_manifest.txt")
+IF(NOT EXISTS "/home/pihhan/Projekty/makneto/trunk/makneto/install_manifest.txt")
+  MESSAGE(FATAL_ERROR "Cannot find install manifest: \"/home/pihhan/Projekty/makneto/trunk/makneto/install_manifest.txt\"")
+ENDIF(NOT EXISTS "/home/pihhan/Projekty/makneto/trunk/makneto/install_manifest.txt")
 
-FILE(READ "/home/kde-devel/src/makneto/install_manifest.txt" files)
+FILE(READ "/home/pihhan/Projekty/makneto/trunk/makneto/install_manifest.txt" files)
 STRING(REGEX REPLACE "\n" ";" files "${files}")
 FOREACH(file ${files})
   MESSAGE(STATUS "Uninstalling \"${file}\"")
