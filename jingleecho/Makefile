#############################################################################
# Makefile for building: libjingleecho.a
# Generated by qmake (2.01a) (Qt 4.5.2) on: pá 2 26 15:18:12 2010
# Project:  jingleecho.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile jingleecho.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DIRIS -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DIRISNET_STATIC -DQT_SHARED
CFLAGS        = -pipe -g -pthread -I/usr/local/include/gstreamer-0.10 -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -pthread -I/usr/local/include/gstreamer-0.10 -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -Iipv6 -Iirisbot -I../ipv6 -I../logger -I.. -I../../../xmpp/psi-git/iris/include -I../../../xmpp/psi-git/iris/src -I../../../xmpp/psi-git/iris/src/xmpp/xmpp-core -I../../../xmpp/psi-git/iris/src/xmpp/xmpp-im -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = codecs.cpp \
		conference.cpp \
		fstjingle.cpp \
		jingle-candidate.cpp \
		jingle-content.cpp \
		jingle-description.cpp \
		jingle-transport.cpp \
		jinglemanager.cpp \
		jinglesession.cpp \
		parser.cpp \
		pjid.cpp \
		qpipeline.cpp \
		session.cpp \
		payloadparameter.cpp \
		mediaconfig.cpp \
		../ipv6/v6interface.c \
		../logger/logger.cpp 
OBJECTS       = codecs.o \
		conference.o \
		fstjingle.o \
		jingle-candidate.o \
		jingle-content.o \
		jingle-description.o \
		jingle-transport.o \
		jinglemanager.o \
		jinglesession.o \
		parser.o \
		pjid.o \
		qpipeline.o \
		session.o \
		payloadparameter.o \
		mediaconfig.o \
		v6interface.o \
		logger.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		jingleecho.pro
QMAKE_TARGET  = jingleecho
DESTDIR       = 
TARGET        = libjingleecho.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: jingleecho.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/home/pihhan/Projekty/xmpp/psi-git/iris/lib/libiris.prl \
		/home/pihhan/Projekty/xmpp/psi-git/iris/lib/libirisnet.prl \
		/usr/lib/libqca.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl
	$(QMAKE) -unix -o Makefile jingleecho.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/static.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/home/pihhan/Projekty/xmpp/psi-git/iris/lib/libiris.prl:
/home/pihhan/Projekty/xmpp/psi-git/iris/lib/libirisnet.prl:
/usr/lib/libqca.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile jingleecho.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/jingleecho1.0.0 || $(MKDIR) .tmp/jingleecho1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/jingleecho1.0.0/ && $(COPY_FILE) --parents codecs.h conference.h fstjingle.h jingle-candidate.h jingle-content.h jingle-description.h jingle-transport.h jinglemanager.h jinglesession.h parser.h pjid.h qpipeline.h session.h payloadparameter.h mediaconfig.h ipv6/v6interface.h .tmp/jingleecho1.0.0/ && $(COPY_FILE) --parents codecs.cpp conference.cpp fstjingle.cpp jingle-candidate.cpp jingle-content.cpp jingle-description.cpp jingle-transport.cpp jinglemanager.cpp jinglesession.cpp parser.cpp pjid.cpp qpipeline.cpp session.cpp payloadparameter.cpp mediaconfig.cpp ../ipv6/v6interface.c ../logger/logger.cpp .tmp/jingleecho1.0.0/ && (cd `dirname .tmp/jingleecho1.0.0` && $(TAR) jingleecho1.0.0.tar jingleecho1.0.0 && $(COMPRESS) jingleecho1.0.0.tar) && $(MOVE) `dirname .tmp/jingleecho1.0.0`/jingleecho1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/jingleecho1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

codecs.o: codecs.cpp codecs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o codecs.o codecs.cpp

conference.o: conference.cpp conference.h \
		qpipeline.h \
		session.h \
		fststatusreader.h \
		jingleerror.h \
		fstjingle.h \
		jinglesession.h \
		pjid.h \
		jingle-description.h \
		payloadparameter.h \
		jingle-candidate.h \
		jingle-content.h \
		jingle-transport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o conference.o conference.cpp

fstjingle.o: fstjingle.cpp fstjingle.h \
		jinglesession.h \
		pjid.h \
		jingle-description.h \
		payloadparameter.h \
		jingle-candidate.h \
		jingle-content.h \
		jingle-transport.h \
		fststatusreader.h \
		conference.h \
		qpipeline.h \
		session.h \
		jingleerror.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fstjingle.o fstjingle.cpp

jingle-candidate.o: jingle-candidate.cpp jingle-candidate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jingle-candidate.o jingle-candidate.cpp

jingle-content.o: jingle-content.cpp jingle-content.h \
		pjid.h \
		jingle-description.h \
		payloadparameter.h \
		jingle-transport.h \
		jingle-candidate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jingle-content.o jingle-content.cpp

jingle-description.o: jingle-description.cpp jingle-description.h \
		payloadparameter.h \
		jinglesession.h \
		pjid.h \
		jingle-candidate.h \
		jingle-content.h \
		jingle-transport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jingle-description.o jingle-description.cpp

jingle-transport.o: jingle-transport.cpp jingle-transport.h \
		jingle-candidate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jingle-transport.o jingle-transport.cpp

jinglemanager.o: jinglemanager.cpp jinglemanager.h \
		jinglesession.h \
		pjid.h \
		jingle-description.h \
		payloadparameter.h \
		jingle-candidate.h \
		jingle-content.h \
		jingle-transport.h \
		jingleerror.h \
		fstjingle.h \
		fststatusreader.h \
		conference.h \
		qpipeline.h \
		session.h \
		ipv6/v6interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jinglemanager.o jinglemanager.cpp

jinglesession.o: jinglesession.cpp jinglesession.h \
		pjid.h \
		jingle-description.h \
		payloadparameter.h \
		jingle-candidate.h \
		jingle-content.h \
		jingle-transport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jinglesession.o jinglesession.cpp

parser.o: parser.cpp parser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parser.o parser.cpp

pjid.o: pjid.cpp pjid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pjid.o pjid.cpp

qpipeline.o: qpipeline.cpp qpipeline.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qpipeline.o qpipeline.cpp

session.o: session.cpp conference.h \
		qpipeline.h \
		session.h \
		fststatusreader.h \
		jingleerror.h \
		fstjingle.h \
		jinglesession.h \
		pjid.h \
		jingle-description.h \
		payloadparameter.h \
		jingle-candidate.h \
		jingle-content.h \
		jingle-transport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o session.o session.cpp

payloadparameter.o: payloadparameter.cpp payloadparameter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o payloadparameter.o payloadparameter.cpp

mediaconfig.o: mediaconfig.cpp mediaconfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mediaconfig.o mediaconfig.cpp

v6interface.o: ../ipv6/v6interface.c ../ipv6/v6interface.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o v6interface.o ../ipv6/v6interface.c

logger.o: ../logger/logger.cpp ../logger/logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o logger.o ../logger/logger.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

